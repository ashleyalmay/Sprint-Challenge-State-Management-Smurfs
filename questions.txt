What problem does the context API help solve?

-It skips the middle man when you need to send the item to the source. 


 In your own words, describe actions, reducers and the store and their role in Redux. What does each piece do? Why is the store known as a 'single source of truth' in a redux application?

-The action controls the type and variable put in there or payload of info. The  Reducer tells you where to change the state from the action. The Store is an object that you pass methods to it. It's known for that because it's the top level of state.


 What is the difference between Application state and Component state? When would be a good time to use one over the other?

-Application state is global and Component state is local. I would say if you want to pass down the props go with component state if you want with hooks then application state.


 Describe redux-thunk, what does it allow us to do? How does it change our action-creators?
 
-Thunk is a middleware that lets you call action creators that return a function instead of an action object.
  

 What is your favorite state management system you've learned and this sprint? Please explain why!

-My favorite is the Context API because it's the easiest and seems straightforward compared to the others. I seem to have a problem when misspelling my functions or variables so this checks me on it. Which saves me a lot of time.

